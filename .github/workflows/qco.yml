name: Deploy Domain Toolkit Prod
on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
jobs:
  # Deploy to EKS
  deploy:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.pull_request.head.ref, 'dependabot/') == false && startsWith(github.event.pull_request.head.ref, 'renovate/') == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push image
        env:
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_REPOSITORY: ${{ secrets.CR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile  -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest
      - name: Deploy To Cluster
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_REPOSITORY: ${{ secrets.CR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        with:
          args: set image deployment/$CR_REPOSITORY $CR_REPOSITORY=cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      - name: Verify Deployment
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          DEPLOYMENT_APP: ${{ secrets.CR_REPOSITORY }}
        with:
          args: rollout status deployment/$DEPLOYMENT_APP
